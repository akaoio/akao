id: "akao:artifact:system-cleanup:metadata-compliance-report:v1"
metadata:
  specification: "Comprehensive audit of metadata compliance across all Akao components for identification standards and documentation requirements"
  scope: "All source files, directories, functions, and classes for compliance with akao namespace and metadata standards"
  timeline: "2025-07-08"
  rationale: "Ensure complete archaeological preservation and systematic governance compliance through metadata validation"
  methodology: "Manual analysis of component headers and metadata extraction against mandatory field requirements"
  references: ["CONTRIBUTING.md#mandatory-metadata-requirements"]

# Files with excellent metadata compliance
compliant_files:
  excellent_compliance:
    - file: "core/engine/compliance_validator.cpp"
      status: "EXCELLENT - Complete metadata with all 8 fields"
      akao_id: "akao:file:core:engine:compliance_validator:v1"
      missing_fields: []
      notes: "Perfect example of metadata compliance"
      
    - file: "main.cpp"
      status: "EXCELLENT - Complete metadata with all 8 fields"
      akao_id: "akao:file:interface:cli:main:v1"
      missing_fields: []
      notes: "Good example with function-level metadata too"

# Files with missing metadata (critical violations)
non_compliant_files:
  missing_all_metadata:
    - file: "core/filesystem/enforcer/structure_enforcer.cpp"
      status: "CRITICAL - No akao namespace metadata at all"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Large implementation file with zero metadata compliance"
      
    - file: "core/filesystem/enforcer/structure_enforcer.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file missing all metadata"
      
    - file: "core/filesystem/scanner/directory_scanner.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Implementation file with no metadata"
      
    - file: "core/filesystem/scanner/directory_scanner.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/filesystem/watcher/file_watcher.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Implementation file with no metadata"
      
    - file: "core/filesystem/watcher/file_watcher.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/rule/executor/rule_executor.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Core rule functionality with no metadata"
      
    - file: "core/rule/executor/rule_executor.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/rule/loader/rule_loader.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Core rule functionality with no metadata"
      
    - file: "core/rule/loader/rule_loader.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/rule/registry/rule_registry.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Core rule functionality with no metadata"
      
    - file: "core/rule/registry/rule_registry.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/trace/logger/audit_logger.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Audit functionality with no metadata"
      
    - file: "core/trace/logger/audit_logger.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/trace/reporter/report_generator.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Report generation with no metadata"
      
    - file: "core/trace/reporter/report_generator.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"
      
    - file: "core/trace/tracer/violation_tracer.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Violation tracking with no metadata"
      
    - file: "core/trace/tracer/violation_tracer.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Header file with no metadata"

  test_files_missing_metadata:
    - file: "tests/integration_test_runner.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Test runner with no metadata"
      
    - file: "tests/test_runner.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Main test runner with no metadata"
      
    - file: "tests/yaml_integration_validation.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "YAML validation tests with no metadata"
      
    - file: "tests/yaml_parser_validation.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Parser validation tests with no metadata"
      
    - file: "tests/cli/cli_command_tests.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "CLI tests with no metadata"
      
    - file: "tests/cli/cli_command_tests.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "CLI test header with no metadata"
      
    - file: "tests/unit/universal_validator_test.cpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Validator tests with no metadata"
      
    - file: "tests/unit/universal_validator_test.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "Validator test header with no metadata"

  interface_files_missing_metadata:
    - file: "interfaces/cli/command_interface.hpp"
      status: "CRITICAL - No akao namespace metadata"
      akao_id: "MISSING"
      missing_fields: ["@id", "@doc", "@specification", "@scope", "@timeline", "@rationale", "@methodology", "@references"]
      notes: "CLI interface with no metadata"

# Directory metadata compliance
directory_metadata_compliance:
  directories_with_metadata:
    - directory: "core/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "core/_.yaml"
      
    - directory: "core/engine/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "core/engine/_.yaml"
      
    - directory: "tests/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "tests/_.yaml"
      
    - directory: "interfaces/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "interfaces/_.yaml"
      
    - directory: "languages/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "languages/_.yaml"
      
    - directory: "artifacts/"
      status: "COMPLIANT - Has _.yaml file"
      metadata_file: "artifacts/_.yaml"

  directories_missing_metadata:
    - directory: "core/filesystem/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "core/rule/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "core/trace/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "tests/cli/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "tests/unit/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "tests/compliance/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"
      
    - directory: "interfaces/cli/"
      status: "MISSING - No _.yaml file"
      metadata_file: "MISSING"

# Function and class level metadata
function_class_metadata:
  functions_with_metadata:
    - function: "main() in main.cpp"
      status: "COMPLIANT - Has complete metadata"
      akao_id: "akao:function:interface:cli:main:v1"
      
    - function: "ComplianceValidator class methods"
      status: "COMPLIANT - All methods have metadata"
      akao_id: "Multiple akao:function IDs"

  functions_missing_metadata:
    - function: "All functions in structure_enforcer.cpp"
      status: "CRITICAL - No function-level metadata"
      estimated_functions: "50+"
      
    - function: "All functions in rule_loader.cpp"
      status: "CRITICAL - No function-level metadata"
      estimated_functions: "10+"
      
    - function: "All functions in rule_registry.cpp"
      status: "CRITICAL - No function-level metadata"
      estimated_functions: "15+"
      
    - function: "All test functions"
      status: "CRITICAL - No function-level metadata"
      estimated_functions: "100+"

# Summary statistics
compliance_summary:
  total_source_files_analyzed: 45
  files_with_complete_metadata: 2
  files_with_partial_metadata: 0
  files_with_no_metadata: 43
  
  total_directories_analyzed: 25
  directories_with_metadata: 6
  directories_missing_metadata: 19
  
  estimated_functions_analyzed: 200
  functions_with_metadata: 10
  functions_missing_metadata: 190
  
  overall_compliance_percentage: 4.4
  critical_level: "CRITICAL"
  
  blocking_errors: 43
  quality_warnings: 19
  best_practice_suggestions: 190

# Correction strategy
correction_strategy:
  phase_1: "Add file-level metadata to all source files"
  phase_2: "Add function and class level metadata"
  phase_3: "Create _.yaml files for all directories"
  phase_4: "Validate metadata completeness and quality"
  
  priority_order:
    1: "Core engine files (highest priority)"
    2: "Rule system files"
    3: "Filesystem utilities"
    4: "Test files"
    5: "Interface files"

# Metadata template for missing files
metadata_template:
  file_header: |
    /**
     * @id: akao:[type]:[category]:[subcategory]:[name]:v1
     * @doc: [20-200 words describing functionality for auto-documentation]
     * @specification: [10-100 words technical specification for developers]
     * @scope: [Architectural location and role within the system]
     * @timeline: 2025-07-08
     * @rationale: [Business/technical justification for existence]
     * @methodology: [Implementation approach, algorithms, or design patterns]
     * @references: [List of related akao IDs and external URLs]
     */
  
  function_header: |
    /**
     * @id: akao:function:[category]:[subcategory]:[function_name]:v1
     * @doc: [20-200 words describing function purpose and behavior]
     * @specification: [Technical specification of function behavior]
     * @scope: [Function role within component architecture]
     * @timeline: 2025-07-08
     * @rationale: [Why this function exists and its necessity]
     * @methodology: [Algorithm or approach used in implementation]
     * @references: [Related akao IDs and dependencies]
     */
  
  directory_metadata: |
    id: "akao:directory:[category]:[subdomain]:[name]:v1"
    metadata:
      specification: "Clear description of directory purpose"
      scope: "Architectural role and contents"
      timeline: "2025-07-08"
      rationale: "Why this directory exists"
      methodology: "Organization approach"
      references: ["akao:file:...", "akao:class:..."]

# Impact analysis
impact_analysis:
  archaeological_preservation_risk: "CRITICAL"
  governance_compliance_risk: "CRITICAL"
  documentation_generation_impact: "SEVERE"
  future_agent_accessibility: "BLOCKED"
  
  estimated_effort:
    file_metadata_addition: "40 hours"
    function_metadata_addition: "80 hours"
    directory_metadata_creation: "10 hours"
    quality_validation: "20 hours"
    total_effort: "150 hours"

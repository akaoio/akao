id: "cpp-validation-workflow"
name: "C++ Code Validation Pipeline"
description: "Comprehensive C++ code validation using the Akao node-based architecture"
version: "1.0.0"

nodes:
  - id: "file-scanner"
    type: "file-scanner"
    description: "Scan for C++ source files"
    enabled: true
    parameters:
      directory: "."
      pattern: "*.cpp"
      recursive: true
      exclude_patterns:
        - "*/build/*"
        - "*/legacy/*"
        - "*/test*"
    timeout: 5000
    retry_count: 2

  - id: "header-scanner"
    type: "file-scanner"
    description: "Scan for C++ header files"
    enabled: true
    parameters:
      directory: "."
      pattern: "*.hpp"
      recursive: true
      exclude_patterns:
        - "*/build/*"
        - "*/legacy/*"
    timeout: 5000
    retry_count: 2

  - id: "cpp-validator"
    type: "logic-executor"
    description: "Execute C++ validation rules"
    enabled: true
    depends_on: ["file-scanner", "header-scanner"]
    parameters:
      rules_directory: ".akao/rules/enabled/cpp"
      validation_mode: "strict"
      fail_on_first_error: false
    timeout: 15000
    retry_count: 1

  - id: "validation-reporter"
    type: "reporter"
    description: "Generate validation report"
    enabled: true
    depends_on: ["cpp-validator"]
    parameters:
      format: "markdown"
      output_file: "cpp-validation-report.md"
      include_statistics: true
      show_file_details: true
    timeout: 3000
    retry_count: 0

connections:
  - from_node: "file-scanner"
    from_output: "files"
    to_node: "cpp-validator"
    to_input: "source_files"

  - from_node: "header-scanner"
    from_output: "files"
    to_node: "cpp-validator"
    to_input: "header_files"

  - from_node: "cpp-validator"
    from_output: "validation_results"
    to_node: "validation-reporter"
    to_input: "report_data"
    transform_expression: "filter(severity >= 'warning')"

default_parameters:
  max_file_size: 1048576  # 1MB
  timeout_seconds: 30
  parallel_validation: true

input_schema:
  project_directory: "string"
  validation_level: "string"
  output_format: "string"

output_schema:
  validation_passed: "boolean"
  report_path: "string"
  violations_count: "integer"
  files_processed: "integer"